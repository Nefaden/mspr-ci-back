kind: pipeline
type: docker
name: default

services:
- name: postgres
  image: postgres:10-alpine
  ports:
  - 5432
  environment:
    POSTGRES_USER: postgres
    POSTGRES_DB: test
    POSTGRES_PASSWORD: test

steps:
  - name: install
    image: node:12.12.0
    commands:
      - npm install

  - name: build
    image: node:12.12.0
    commands:
      - npm run prebuild
      - npm run build

  - name: kaniko
    image: banzaicloud/drone-kaniko
    settings:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_TOKEN
      registry: registry.gitlab.com
      repo: mspr-ci1/mspr-ci-back
      tags: 0.0.1

  - name: testing
    image: node:12.12.0
    group: testing
    commands:
      - npm run test

  - name: testing e2e
    image: node:12.12.0
    group: testing
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: test
      DATABASE_SCHEMA: public
      DATABASE_NAME: test
      XDG_CACHE_HOME: /drone/.cache
      venv: none
    cache:
      mount:
      - .cache
    commands:
      - npm run test:e2e

  - name: lint
    image: node:12.12.0
    group: testing
    commands:
      - npm run lint

  - name: coverage
    image: node:12.12.0
    group: testing
    commands:
      - npm run test:cov

  - name: deploy
    image: caprover/cli-caprover:latest
    commands:
      #- git checkout -b release-${DRONE_TAG}
      - npx caprover deploy -h $CAPROVER_DOMAIN -p $CAPROVER_PASSWORD -a $CAPROVER_APPNAME -b master
      #Add -b release-${DRONE_TAG} to push and deploy on tag
    environment:
      CAPROVER_DOMAIN:
        from_secret: CAPROVER_DOMAIN
      CAPROVER_APPNAME:
        from_secret: CAPROVER_APPNAME
      CAPROVER_PASSWORD:
        from_secret: CAPROVER_PASSWORD
    when:
      branch:
      - master
    #depends_on: [format, test_e2e, build]
    #when:
    #  event: tag

  - name: notify
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: DISCORD_WEBHOOK_ID
      webhook_token:
        from_secret: DISCORD_WEBHOOK_TOKEN
      message: "{{#success build.status}} ‚úÖ  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\nüìù Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\n\nüåê {{ build.link }} {{else}} ‚ùå  Build #{{build.number}} of `{{repo.name}}` failed.\n\nüìù Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê {{ build.link }} {{/success}}\n"

    when:
      status: [ success, failure ]
